services:
  - type: web
    name: capsule-server
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    envVars:
      - key: NODE_ENV
        value: production
      - key: REDIS_URL
        value: REDIS_URL
      - key: DATABASE_URL
        sync: false # Set in Render dashboard or use a secret manager
    disk:
      name: logs
      mountPath: /usr/src/app/logs
    autoDeploy: true
    healthCheckPath: /
    ports:
      - 4001

  - type: worker
    name: capsule-worker
    env: docker
    dockerfilePath: ./Dockerfile
    startCommand: npm run worker
    envVars:
      - key: REDIS_URL
        value: REDIS_URL
      - key: DATABASE_URL
        sync: false # Set in Render dashboard or use a secret manager

  - type: pserv
    name: capsule-db
    env: docker
    image: postgres:17.5-alpine3.22
    envVars:
      - key: POSTGRES_DB
        value: time-capsule
      - key: POSTGRES_PASSWORD
        sync: false # Set in Render dashboard or use a secret manager
      - key: POSTGRES_HOST_AUTH_METHOD
        value: trust
    disk:
      name: db-data
      mountPath: /var/lib/postgresql/data
    ports:
      - 5432

  - type: pserv
    name: capsule-redis
    env: docker
    image: redis:7.4-alpine
    ports:
      - 6379

  - type: web
    name: capsule-nginx
    env: docker
    image: nginx:latest
    dockerCommand: nginx -g 'daemon off;'
    disk:
      name: nginx-logs
      mountPath: /var/log/nginx
    envVars: []
    ports:
      - 8001
    dependsOn:
      - capsule-server